/*
*) 입력
첫째 줄에 격자판의 크기 R, C와 상어의 수 M이 주어진다. (2 ≤ R, C ≤ 100, 0 ≤ M ≤ R×C)
둘째 줄부터 M개의 줄에 상어의 정보가 주어진다.
상어의 정보는 다섯 정수 r, c, s, d, z (1 ≤ r ≤ R, 1 ≤ c ≤ C, 0 ≤ s ≤ 1000, 1 ≤ d ≤ 4, 1 ≤ z ≤ 10000) 로 이루어져 있다.
(r, c)는 상어의 위치, s는 속력, d는 이동 방향, z는 크기이다.
d가 1인 경우는 위, 2인 경우는 아래, 3인 경우는 오른쪽, 4인 경우는 왼쪽을 의미한다.

4 6 8
4 1 3 3 8
1 3 5 2 9
2 4 8 4 1
4 5 0 1 4
3 3 1 2 7
1 5 8 4 3
3 6 2 1 2
2 2 2 3 5

4 6 2
1 3 5 2 9
2 3 5 1 7 

*) 메모리

*) 시나리오

*) 출력
(1)
    // 맵에 들어잇는 상어 정보 출력
    for(int i=1;i<=h;i++){
        for(int j=1;j<=w;j++){
            cout <<i<<","<<j<<" : "<< mp[i][j] << " => ";
            cout << sh[mp[i][j]].r<<","<< sh[mp[i][j]].c<<","<<
            sh[mp[i][j]].s<<","<< sh[mp[i][j]].d<<","<< sh[mp[i][j]].z << endl;
        }
    }
(2) 상어 이동 테스트
(2-1) cout << cy << "," << cx << ","<< sh[index].d << endl;
(2-2) cout << ny << "," << nx << ","<< sh[index].d << endl;
*/